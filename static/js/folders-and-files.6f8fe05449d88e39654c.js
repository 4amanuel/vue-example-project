webpackJsonp([18],{"+TVK":function(e,t,s){"use strict";var n=s("c/Tr"),a=s.n(n);t.a={name:"folders-and-files",mounted:function(){var e=this,t=a()(document.getElementsByClassName("title")),s=t.filter(function(t){return t.innerHTML===e.$route.query.title})[0];s?s.scrollIntoView():scroll(0,0)},data:function(){return{}},methods:{}}},MnIa:function(e,t,s){"use strict";var n=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",[s("back-nav",{attrs:{title:"Folders and Files"}}),s("section",{staticClass:"section"},[s("div",{staticClass:"container"},[s("div",{staticClass:"content"},[e._v("In this section of the tutorial we'll discuss the folder structure and how to configure things for your\nsite's domain...")]),s("div",{staticClass:"title is-4"},[e._v("Breakdown of all the Folders")]),s("div",{staticClass:"content"},[s("ul",[s("li",[s("strong",[e._v(".vscode ")]),e._v("- This is where all your VS Code editor settings live for a project. These are discussed in the "),s("router-link",{attrs:{to:{name:"editors"}}},[e._v("Editors")]),e._v(" the the tutorial.")],1),e._m(0),e._m(1),e._m(2),e._m(3),e._m(4),e._m(5),e._m(6),e._m(7),e._m(8),e._m(9),e._m(10),e._m(11),e._m(12),e._m(13),e._m(14),e._m(15)])]),s("div",{staticClass:"title is-4"},[e._v("Component and Page Folder Structure")]),e._m(16),e._m(17),e._m(18),s("div",{staticClass:"title is-6"},[e._v("Routing independent of buisiness domain/features")]),e._m(19),s("div",{staticClass:"title is-6"},[e._v("Why are component file names in kebab-case?")]),s("div",{staticClass:"content"},[e._v(" Since some operating systems don't have case-sensitive file naming, the kebab-case is used for \nall file names.")]),s("div",{staticClass:"title is-4"},[e._v("Configure For Your Site's Root Subfolder")]),e._m(20),s("div",{staticClass:"title is-6"},[e._v("Router Base ")]),s("div",{staticClass:"content"},[e._v("Update the base of your router:  ")]),s("strong",{staticClass:"app-italic"},[e._v("src/router/index.js")]),e._m(21),s("div",{staticClass:"title is-6"},[e._v("Build Config's AssetsPublicPath ")]),s("div",{staticClass:"content"},[e._v("Update your build config's assetsPublicPath:  ")]),s("strong",{staticClass:"app-italic"},[e._v("build/config/index.js")]),e._m(22),s("div",{staticClass:"title is-6"},[e._v("Dev Config Proxy Work-Around")]),e._m(23),s("strong",{staticClass:"app-italic"},[e._v("build/config/index.js")]),e._m(24)])])],1)},a=[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("build ")]),e._v("- Where all the Webpack files live. ")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("config")]),e._v("- The configuration settings for Webpack in each environment (dev, production, ...).")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("dist")]),e._v("- When you "),s("code",[e._v("npm run build ")]),e._v(", this folder is created/recreated and holds all the built files (tranpiled, chunked, minified, hashed, etc.)\nthat will need to be deployed to your production environment.")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("node_modules")]),e._v(" - Where all your locally installed packages live.  ")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("src/assets ")]),e._v(" - Assets like images or fonts can be stored here. Webpack can process these (ie. fingerprinting).  ")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("src/auth ")]),e._v(" - The authentication code the app uses can be found here.  ")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("src/docs")]),e._v(" - All docs (pages/components, mixins and other supporting js) go here.")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("src/examples")]),e._v(" - All examples (pages/components, mixins and other supporting js) are here. ")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("src/features")]),e._v(" - All of your features you want to add (pages/components, mixins and other supporting js) go here.   ")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("src/http")]),e._v(" - We'll create our HTTP client here and list out all our endpoints to an API on a backend server. ")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("src/router")]),e._v(" - The VueRouter router settings and routes.  ")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("src/styles")]),e._v(" - All css/scss/stylus styles for your app go here. ")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("src/utils  ")]),e._v(" - Any cross-cutting js code (ie. authentication, js helper functions) go here.")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("src/vuex")]),e._v(" - Hold all files for configuring your Vuex central state management. (Named  "),s("code",[e._v("Vuex")]),e._v("instead of "),s("code",[e._v("store ")]),e._v("in order to avoid any confusion in projects who have some sort of store/shopping code involved\nin their buisiness domain).")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("static")]),e._v(" - Files that you don't need processed through Webpack.")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("li",[s("strong",[e._v("test")]),e._v(" - Where all your test cases live. ")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._v("In some projects you'll see a "),s("code",[e._v("/pages")]),e._v("folder and a "),s("code",[e._v("/components ")]),e._v("folder. However, I suggest bringing these together and arranging vertically based on your buisiness domain instead\nof horizontally by  \nfile type. You don't have to be perfect on your grouping at first, but over time you will adjust as your buisiness \ndomain will mature. As it matures you will better organize and slice it. You end up with \na project that is easier\nto split up into separate projects (think microservices?) if you feel the project has become too large\nand complex. Context switching can also be reduced since related files (related by business/what feature they support)\nlive a little closer to each other.\nConsider how much nicer it is to keep context in your head looking at a folder like this: ")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[s("strong",{staticClass:"app-italic"},[e._v('Folder structure with more "vertical slicing"')])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("pre",{staticClass:"block"},[s("code",{staticClass:"hljs bash"},[e._v("features/\n  dashboard/        \n    dashboard-page.vue   "),s("span",{staticClass:"hljs-comment"},[e._v('# The dashboard or maybe "index" page.')]),e._v("\n    settings-page.vue  "),s("span",{staticClass:"hljs-comment"},[e._v("# The dashboard settings page.")]),e._v("\n    grid.vue  "),s("span",{staticClass:"hljs-comment"},[e._v("# A supporting component.")]),e._v("\n    grid-item.vue\n    sorter.js  "),s("span",{staticClass:"hljs-comment"},[e._v("# Some supporting js.")]),e._v("\n    sample.json  "),s("span",{staticClass:"hljs-comment"},[e._v("# Some data.")]),e._v("\n  profile/\n    profile-page.vue  "),s("span",{staticClass:"hljs-comment"},[e._v('# Page components are always suffixed "-page".')]),e._v("\n    billing-page.vue\n    payment-option-modal.vue\n    helpers.js   "),s("span",{staticClass:"hljs-comment"},[e._v("#  Features can depend on other features, ie. dashboard could use this.")]),e._v("\n    no-avatar.svg  "),s("span",{staticClass:"hljs-comment"},[e._v("# Some images can be here instead of in src/assets.")]),e._v("\n")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._v("This type of structure lives individually from your routing. Your routes (external api) can change\nseperately from your (internal api) buisiness domain organized in the"),s("code",[e._v("features/")]),e._v("folder.")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._v("If you are viewing this app via the live demo on Github, you will notice the domain name and subfolder: "),s("code",[e._v("https://www.prograhammer.com/vue-example-project")]),e._v(' . The "vue-example-project" part of the URL must be configured in a few places. \nYou\'ll need to update these places with your own subfolder (or "/" if at the root of your domain name):')])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("pre",{staticClass:"block"},[s("code",{staticClass:"hljs bash"},[e._v("// ...\n\n/**\n* The Router instance containing all the routes "),s("span",{staticClass:"hljs-keyword"},[e._v("for")]),e._v(" the application.\n*/\nconst router = new Router({\n  base: "),s("span",{staticClass:"hljs-string"},[e._v("'/vue-example-project'")]),e._v(",  "),s("span",{staticClass:"hljs-comment"},[e._v("# <-- update here")]),e._v("\n  mode: "),s("span",{staticClass:"hljs-string"},[e._v("'history'")]),e._v(",\n  routes: routes.map(route => ({\n    name: route.name,\n    path: route.path,\n    component: route.component,\n    beforeEnter: route.isPublic ? null : guardRoute\n  }))\n})\n")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("pre",{staticClass:"block"},[s("code",{staticClass:"hljs bash"},[e._v("// ...\n\nmodule.exports = {\n  build: {\n    env: require("),s("span",{staticClass:"hljs-string"},[e._v("'./prod.env'")]),e._v("),\n    index: path.resolve(__dirname, "),s("span",{staticClass:"hljs-string"},[e._v("'../dist/index.html'")]),e._v("),\n    assetsRoot: path.resolve(__dirname, "),s("span",{staticClass:"hljs-string"},[e._v("'../dist'")]),e._v("),\n    assetsSubDirectory: "),s("span",{staticClass:"hljs-string"},[e._v("'static'")]),e._v(",\n    assetsPublicPath: "),s("span",{staticClass:"hljs-string"},[e._v("'/vue-example-project/'")]),e._v(",  "),s("span",{staticClass:"hljs-comment"},[e._v("# <-- update here")]),e._v("\n")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._v("We also need to simulate the subfolder when we run the dev server. \nUnfortunately we can't just update the "),s("code",[e._v("assetsPublicPath")]),e._v(" here. So as a work-around we can just add another proxy rule:   ")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("pre",{staticClass:"block"},[s("code",{staticClass:"hljs bash"},[e._v("// ...\n\ndev: {\n  env: require("),s("span",{staticClass:"hljs-string"},[e._v("'./dev.env'")]),e._v("),\n  port: "),s("span",{staticClass:"hljs-number"},[e._v("8080")]),e._v(",\n  autoOpenBrowser: "),s("span",{staticClass:"hljs-literal"},[e._v("true")]),e._v(",\n  assetsSubDirectory: "),s("span",{staticClass:"hljs-string"},[e._v("'static'")]),e._v(",\n  assetsPublicPath: "),s("span",{staticClass:"hljs-string"},[e._v("'/'")]),e._v(",\n  proxyTable: {\n    "),s("span",{staticClass:"hljs-string"},[e._v("'/vue-example-project/*'")]),e._v(": {                    "),s("span",{staticClass:"hljs-comment"},[e._v("# <-- proxy rule added")]),e._v("\n        target: "),s("span",{staticClass:"hljs-string"},[e._v("'http://localhost:[port]/'")]),e._v(",\n        pathRewrite: { "),s("span",{staticClass:"hljs-string"},[e._v("'^/vue-example-project'")]),e._v(": "),s("span",{staticClass:"hljs-string"},[e._v("''")]),e._v(" },\n    },")])])}],i={render:n,staticRenderFns:a};t.a=i},bwQv:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s("+TVK"),a=s("MnIa"),i=s("VU/8"),r=i(n.a,a.a,null,null,null);t.default=r.exports}});
//# sourceMappingURL=folders-and-files.6f8fe05449d88e39654c.js.map